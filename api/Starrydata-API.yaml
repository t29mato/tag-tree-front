openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/fabrication_processes:
    get:
      operationId: List/api/fabrication_processes
      description: ''
      parameters:
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/fields'
        - name: page[number]
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page[size]
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: sort
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: filter[search]
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: List/api/fabrication_processes
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FabricationProcess'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    post:
      operationId: create/api/fabrication_processes
      description: ''
      parameters: []
      tags:
        - starrydata
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                  additionalProperties: false
                  properties:
                    type:
                      $ref: '#/components/schemas/type'
                    id:
                      $ref: '#/components/schemas/id'
                    links:
                      type: object
                      properties:
                        self:
                          $ref: '#/components/schemas/link'
                    attributes:
                      type: object
                      properties:
                        name_ja:
                          type: string
                          maxLength: 100
                      required:
                        - name_ja
                    relationships:
                      type: object
                      properties:
                        parent_id:
                          $ref: '#/components/schemas/reltoone'
      responses:
        '201':
          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.'
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FabricationProcess'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '202':
          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/datum'
        '204':
          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed.'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '403':
          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '409':
          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
  /api/fabrication_processes/{id}:
    get:
      operationId: retrieve/api/fabrication_processes/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this fabrication process.
          schema:
            type: string
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/fields'
        - name: sort
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: filter[search]
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: retrieve/api/fabrication_processes/{id}
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FabricationProcess'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    patch:
      operationId: partialUpdate/api/fabrication_processes/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this fabrication process.
          schema:
            type: string
      tags:
        - starrydata
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  additionalProperties: false
                  properties:
                    type:
                      $ref: '#/components/schemas/type'
                    id:
                      $ref: '#/components/schemas/id'
                    links:
                      type: object
                      properties:
                        self:
                          $ref: '#/components/schemas/link'
                    attributes:
                      type: object
                      properties:
                        name_ja:
                          type: string
                          maxLength: 100
                    relationships:
                      type: object
                      properties:
                        parent_id:
                          $ref: '#/components/schemas/reltoone'
      responses:
        '200':
          description: partialUpdate/api/fabrication_processes/{id}
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FabricationProcess'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '403':
          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '409':
          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    delete:
      operationId: destroy/api/fabrication_processes/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this fabrication process.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/onlymeta'
        '202':
          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/datum'
        '204':
          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
  /api/synthesis_method_tags/:
    get:
      operationId: List/api/synthesis_method_tags/
      description: ''
      parameters:
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/fields'
        - name: page[number]
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page[size]
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: sort
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: filter[search]
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: List/api/synthesis_method_tags/
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SynthesisMethodTag'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    post:
      operationId: create/api/synthesis_method_tags/
      description: ''
      parameters: []
      tags:
        - starrydata
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                  additionalProperties: false
                  properties:
                    type:
                      $ref: '#/components/schemas/type'
                    id:
                      $ref: '#/components/schemas/id'
                    links:
                      type: object
                      properties:
                        self:
                          $ref: '#/components/schemas/link'
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          maxLength: 100
                      required:
                        - name
      responses:
        '201':
          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.'
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SynthesisMethodTag'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '202':
          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/datum'
        '204':
          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed.'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '403':
          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '409':
          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
  /api/synthesis_method_tags/{id}:
    get:
      operationId: retrieve/api/synthesis_method_tags/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this synthesis method tag.
          schema:
            type: string
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/fields'
        - name: sort
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: filter[search]
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: retrieve/api/synthesis_method_tags/{id}
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SynthesisMethodTag'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    patch:
      operationId: partialUpdate/api/synthesis_method_tags/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this synthesis method tag.
          schema:
            type: string
      tags:
        - starrydata
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  additionalProperties: false
                  properties:
                    type:
                      $ref: '#/components/schemas/type'
                    id:
                      $ref: '#/components/schemas/id'
                    links:
                      type: object
                      properties:
                        self:
                          $ref: '#/components/schemas/link'
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          maxLength: 100
      responses:
        '200':
          description: partialUpdate/api/synthesis_method_tags/{id}
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SynthesisMethodTag'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '403':
          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '409':
          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    delete:
      operationId: destroy/api/synthesis_method_tags/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this synthesis method tag.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/onlymeta'
        '202':
          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/datum'
        '204':
          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
  /api/synthesis_method_tag_tree_nodes/:
    get:
      operationId: List/api/synthesis_method_tag_tree_nodes/
      description: ''
      parameters:
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/fields'
        - name: page[number]
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page[size]
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: sort
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: filter[search]
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: List/api/synthesis_method_tag_tree_nodes/
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SynthesisMethodTagTreeNode'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    post:
      operationId: create/api/synthesis_method_tag_tree_nodes/
      description: ''
      parameters: []
      tags:
        - starrydata
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                  additionalProperties: false
                  properties:
                    type:
                      $ref: '#/components/schemas/type'
                    id:
                      $ref: '#/components/schemas/id'
                    links:
                      type: object
                      properties:
                        self:
                          $ref: '#/components/schemas/link'
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          maxLength: 100
                      required:
                        - name
                    relationships:
                      type: object
                      properties:
                        synthesis_method_tag:
                          $ref: '#/components/schemas/reltoone'
                        parent:
                          $ref: '#/components/schemas/reltoone'
      responses:
        '201':
          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.'
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SynthesisMethodTagTreeNode'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '202':
          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/datum'
        '204':
          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed.'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '403':
          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '409':
          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
  /api/synthesis_method_tag_tree_nodes/{id}:
    get:
      operationId: retrieve/api/synthesis_method_tag_tree_nodes/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this synthesis method tag tree node.
          schema:
            type: string
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/fields'
        - name: sort
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: filter[search]
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: retrieve/api/synthesis_method_tag_tree_nodes/{id}
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SynthesisMethodTagTreeNode'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    patch:
      operationId: partialUpdate/api/synthesis_method_tag_tree_nodes/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this synthesis method tag tree node.
          schema:
            type: string
      tags:
        - starrydata
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  additionalProperties: false
                  properties:
                    type:
                      $ref: '#/components/schemas/type'
                    id:
                      $ref: '#/components/schemas/id'
                    links:
                      type: object
                      properties:
                        self:
                          $ref: '#/components/schemas/link'
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          maxLength: 100
                    relationships:
                      type: object
                      properties:
                        synthesis_method_tag:
                          $ref: '#/components/schemas/reltoone'
                        parent:
                          $ref: '#/components/schemas/reltoone'
      responses:
        '200':
          description: partialUpdate/api/synthesis_method_tag_tree_nodes/{id}
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/SynthesisMethodTagTreeNode'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'
                  links:
                    description: Link members related to primary data
                    allOf:
                      - $ref: '#/components/schemas/links'
                      - $ref: '#/components/schemas/pagination'
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '403':
          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '409':
          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
    delete:
      operationId: destroy/api/synthesis_method_tag_tree_nodes/{id}
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this synthesis method tag tree node.
          schema:
            type: string
      tags:
        - starrydata
      responses:
        '200':
          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/onlymeta'
        '202':
          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/datum'
        '204':
          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'
        '401':
          description: not authorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
        '404':
          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/failure'
components:
  schemas:
    FabricationProcess:
      type: object
      required:
        - type
        - id
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
        attributes:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name_ja:
              type: string
              maxLength: 100
          required:
            - name_ja
        relationships:
          type: object
          properties:
            parent_id:
              $ref: '#/components/schemas/reltoone'
    SynthesisMethodTag:
      type: object
      required:
        - type
        - id
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
        attributes:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
            - name
    SynthesisMethodTagTreeNode:
      type: object
      required:
        - type
        - id
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
        attributes:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
            - name
        relationships:
          type: object
          properties:
            synthesis_method_tag:
              $ref: '#/components/schemas/reltoone'
            parent:
              $ref: '#/components/schemas/reltoone'
    JSONAPIresponse:
      oneOf:
        - $ref: "#/components/schemas/success"
        - $ref: "#/components/schemas/failure"
        - $ref: "#/components/schemas/info"
    success:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/data"
        included:
          description: >-
            To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called `compound documents`.
          type: array
          items:
            $ref: "#/components/schemas/resource"
          uniqueItems: true
        meta:
          $ref: "#/components/schemas/meta"
        links:
          description: Link members related to the primary data.
          allOf:
            - $ref: "#/components/schemas/links"
            - $ref: "#/components/schemas/pagination"
        jsonapi:
          $ref: "#/components/schemas/jsonapi"
      additionalProperties: false
    failure:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/error"
          uniqueItems: true
        meta:
          $ref: "#/components/schemas/meta"
        jsonapi:
          $ref: "#/components/schemas/jsonapi"
        links:
          $ref: "#/components/schemas/links"
      additionalProperties: false
    info:
      type: object
      required:
        - meta
      properties:
        meta:
          $ref: "#/components/schemas/meta"
        links:
          $ref: "#/components/schemas/links"
        jsonapi:
          $ref: "#/components/schemas/jsonapi"
      additionalProperties: false
    onlymeta:
      properties:
        meta:
          $ref: "#/components/schemas/meta"
      additionalProperties: false
    meta:
      description: >-
        Non-standard meta-information that can not be represented as an attribute or relationship.
      type: object
      additionalProperties: true
    data:
      description: >-
        The document's `primary data` is a representation of the resource or collection of resources targeted by a request.
      oneOf:
        - $ref: "#/components/schemas/resource"
        - description: >-
            An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.
          type: array
          items:
            $ref: "#/components/schemas/resource"
          uniqueItems: true
        - $ref: "#/components/schemas/nulltype"
    post_datum:
      description: >-
        singular item being [created](https://jsonapi.org/format/#crud-creating). `id` is optional and may be ignored if supplied and created by the system.
      properties:
        data:
          $ref: "#/components/schemas/post_resource"
    datum:
      description: singular item
      properties:
        data:
          $ref: "#/components/schemas/resource"
    resource:
      description: Resource objects appear in a JSON API document to represent resources.
      type: object
      required:
        - type
        - id
      properties:
        type:
          $ref: "#/components/schemas/type"
        id:
          $ref: "#/components/schemas/id"
        attributes:
          $ref: "#/components/schemas/attributes"
        relationships:
          $ref: "#/components/schemas/relationships"
        links:
          $ref: "#/components/schemas/links"
        meta:
          $ref: "#/components/schemas/meta"
      additionalProperties: false
    # unfortunately $ref resource and tring to change required doesn't work.
    post_resource:
      description: A POSTable resource object has an optional id.
      type: object
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/type"
        id:
          $ref: "#/components/schemas/id"
        attributes:
          $ref: "#/components/schemas/attributes"
        relationships:
          $ref: "#/components/schemas/relationships"
        # not clear what it means to try to POST links but the spec says POST a Resource Object...
        links:
          $ref: "#/components/schemas/links"
        meta:
          $ref: "#/components/schemas/meta"
      additionalProperties: false
    relationshipLinks:
      description: >-
        A resource object **MAY** contain references to other resource objects (`relationships`). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.
      type: object
      properties:
        self:
          $ref: "#/components/schemas/link"
        related:
          $ref: "#/components/schemas/link"
      additionalProperties: true
    links:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/link"
    link:
      description: >-
        A link **MUST** be represented as either: a string containing the link's URL or a link object.
      oneOf:
        - description: A string containing the link's URL.
          type: string
          format: uri-reference
        - type: object
          required:
            - href
          properties:
            href:
              description: A string containing the link's URL.
              type: string
              format: uri-reference
            meta:
              $ref: "#/components/schemas/meta"
    attributes:
      description: >-
        Members of the attributes object (`attributes`) represent information about the resource object in which it's defined.
      type: object
      # properties:
      #   ^(?!relationships$|links$|id$|type$)\w[-\w_]*$:
      #     type: object
      #     description: Attributes may contain any valid JSON value.
      additionalProperties: false
    # TODO: This validates rather than defines:
    relationships:
      description: >-
        Members of the relationships object represent references from the resource object in which it's defined to other resource objects. N.B. this is validation, not useful for inclusion.
      type: object
      # properties:
      #   ^(?!id$|type$)\w[-\w_]*$:
      #     $ref: "#/components/schemas/relationship"
      additionalProperties:
        $ref: "#/components/schemas/relationship"
    relationship:
      description: A single relationship description
      type: object
      properties:
        links:
          $ref: "#/components/schemas/relationshipLinks"
        data:
          description: Member, whose value represents `resource linkage`.
          oneOf:
            - $ref: "#/components/schemas/relationshipToOne"
            - $ref: "#/components/schemas/relationshipToMany"
        meta:
          $ref: "#/components/schemas/meta"
      anyOf:
        - required:
            - data
        - required:
            - meta
        - required:
            - links
      additionalProperties: false
    relationshipToOne:
      description: >-
        References to other resource objects in a to-one (`relationship`). Relationships can be specified by including a member in a resource's links object.
      anyOf:
        - $ref: "#/components/schemas/empty"
        - $ref: "#/components/schemas/linkage"
    reltoone:
      description: A singular relationship
      type: object
      properties:
        links:
          $ref: "#/components/schemas/relationshipLinks"
        data:
          $ref: "#/components/schemas/relationshipToOne"
        meta:
          $ref: "#/components/schemas/meta"
    reltomany:
      description: A multiple relationship
      type: object
      properties:
        links:
          $ref: "#/components/schemas/relationshipLinks"
        data:
          $ref: "#/components/schemas/relationshipToMany"
        meta:
          $ref: "#/components/schemas/meta"
    reltoonedata:
      description: A singular relationship, data only.
      type: object
      properties:
        data:
          $ref: "#/components/schemas/relationshipToOne"
    reltomanydata:
      description: A multiple relationship, data only.
      type: object
      properties:
        data:
          $ref: "#/components/schemas/relationshipToMany"
    relationshipToMany:
      description: >-
        An array of objects each containing `type` and `id` members for to-many relationships.
      type: array
      items:
        $ref: "#/components/schemas/linkage"
      uniqueItems: true
    empty:
      $ref: "#/components/schemas/nulltype"
    linkage:
      description: The `type` and `id` to non-empty members.
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
        id:
          type: string
        meta:
          $ref: "#/components/schemas/meta"
      additionalProperties: false
    pagination:
      type: object
      properties:
        first:
          description: The first page of data
          oneOf:
            - type: string
              format: uri-reference
            - $ref: "#/components/schemas/nulltype"
        last:
          description: The last page of data
          oneOf:
            - type: string
              format: uri-reference
            - $ref: "#/components/schemas/nulltype"
        prev:
          description: The previous page of data
          oneOf:
            - type: string
              format: uri-reference
            - $ref: "#/components/schemas/nulltype"
        next:
          description: The next page of data
          oneOf:
            - type: string
              format: uri-reference
            - $ref: "#/components/schemas/nulltype"
    jsonapi:
      description: An object describing the server's implementation
      type: object
      properties:
        version:
          type: string
        meta:
          $ref: "#/components/schemas/meta"
      additionalProperties: false
    error:
      type: object
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          type: string
        links:
          $ref: "#/components/schemas/links"
        status:
          description: >-
            The HTTP status code applicable to this problem, expressed as a string value.
          type: string
        code:
          description: >-
            An application-specific error code, expressed as a string value.
          type: string
        title:
          description: >-
            A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.
          type: string
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the problem.
          type: string
        source:
          type: object
          properties:
            pointer:
              description: >-
                A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. `/data` for a primary data object, or `/data/attributes/title` for a specific attribute].
              type: string
            parameter:
              description: A string indicating which query parameter caused the error.
              type: string
        meta:
          $ref: "#/components/schemas/meta"
      additionalProperties: false
    nulltype:
      description: OAS doesn't allow the null type so use this.
      type: number
      nullable: true
      default: null
    id:
      type: string
      description: "[resource object identifier](https://jsonapi.org/format/#document-resource-object-identification)"
    type:
      type: string
      description: "[resource object type](https://jsonapi.org/format/#document-resource-object-identification)"
  parameters:
    include:
      name: include
      in: query
      description: "[list of included related resources](https://jsonapi.org/format/#fetching-includes)"
      required: false
      style: form
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: "[fields to sort by](https://jsonapi.org/format/#fetching-sorting)"
      required: false
      style: form
      schema:
        type: string
    pageSize:
      name: "page[size]"
      in: query
      description: size of page for paginated results
      required: false
      schema:
        type: integer
        format: int32
    pageNumber:
      name: "page[number]"
      in: query
      description: page number of results
      required: false
      schema:
        type: integer
        format: int32
    pageLimit:
      name: "page[limit]"
      in: query
      description: limit for this page of paginated results
      required: false
      schema:
        type: integer
        format: int32
    pageOffset:
      name: "page[offset]"
      in: query
      description: collection items offset for paginated results
      required: false
      schema:
        type: integer
        format: int32
    # unable to properly represent fields and filters? swagger-edit appears to not implement this correctly.
    fields:
      name: fields
      in: query
      description: "sparse fieldsets: `fields[TYPE]=field1,field2,...`"
      required: false
      style: deepObject
      schema:
        type: string
    filter:
      name: filter
      in: query
      description: "filter[NAME]=value(s)"
      required: false
      style: deepObject
      schema:
        type: string
