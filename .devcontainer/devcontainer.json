// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.177.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	"dockerFile": "./Dockerfile",

	"postCreateCommand": "./.devcontainer/start.sh",

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
    // Vue
	"octref.vetur",
    "shenjiaolong.vue-helper",

    // Git
	"eamodio.gitlens",

    // lint & beautify
	"EditorConfig.EditorConfig",
	"HookyQR.beautify",
	"mohsen1.prettify-json",
    "esbenp.prettier-vscode",
    "dbaeumer.vscode-eslint",
    "streetsidesoftware.code-spell-checker",

	// npm
    "eg2.vscode-npm-script",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [ 3000, 8080 ],
  	"mounts": ["source=${localEnv:HOME}/.gitconfig,target=/root/.gitconfig,type=bind"]

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
